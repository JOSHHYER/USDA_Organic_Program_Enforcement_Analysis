>>>malloy
source: USDA_Organic_Program_Enforcement is duckdb.table('USDA_Organic_Program_Enforcement.csv') extend{

    dimension: 
    replace_commas_collected_amount is replace(`Collected Amount`,',', '')
    replace_dollar_sign_collected_amount is replace(replace_commas_collected_amount,'$', '')
    collected_amt is replace(replace_dollar_sign_collected_amount,' ', ''):::number
    date_opened is strptime!timestamp(`Date/Time Opened`, '%-m/%-d/%Y %-H:%M')
    date_closed is strptime!timestamp(`Date/Time Case Closed`, '%-m/%-d/%Y %-H:%M')
    date_closed_year is date_closed.year
    dif_in_days is days(date_opened to date_closed)
    measure: 
    total_cases is count()
    complaint_type_fraud is count() {where: `Complaint Type` = 'Fraud'}
    complaint_type_labeling_error is count() {where: `Complaint Type` = 'Labeling Error'}
    complaint_type_other is count() {where: `Complaint Type` = 'Other'}
    complaint_type_pesticide_residue is count() {where: `Complaint Type` = 'Pesticide Residue'}
    complaint_type_prohibited_practice is count() {where: `Complaint Type` = 'Prohibited Practice'}
    complaint_type_prohibited_substance is count() {where: `Complaint Type` = 'Prohibited Substance'}
    complaint_type_reinstatement is count() {where: `Complaint Type` = 'Reinstatement'}
    complaint_type_uncertified_operation is count() {where: `Complaint Type` = 'Uncertified Operation'}
    most_common_account_name is count(`Account Name`)
    outcome_appeal is count() {where: `Outcomes` = 'Appeal'}
    outcome_civil_penalty is count() {where: `Outcomes` = 'Civil Penalty'}
    outcome_compliance is count() {where: `Outcomes` = 'Compliance'}
    outcome_fradulent_certificate_posted is count() {where: `Outcomes` = 'Fradulent Certificate Posted'}
    outcome_labels_changed is count() {where: `Outcomes` = 'Labels changed'}
    outcome_no_investigation is count() {where: `Outcomes` = 'No Investigation'}
    outcome_no_violation is count() {where: `Outcomes` = 'No Violation'}
    outcome_nonc is count() {where: `Outcomes` = 'NONC'}
    outcome_operator_certification is count() {where: `Outcomes` = 'Operator Certification'}
    outcome_other is count() {where: `Outcomes` = 'Other'}
    outcome_proposed_revocation is count() {where: `Outcomes` = 'Proposed Revocation'}
    outcome_proposed_suspension is count() {where: `Outcomes` = 'Proposed Suspension'}
    outcome_settlement is count() {where: `Outcomes` = 'Settlement'}
    total_collect_amt is sum(collected_amt)
    avg_collected_amt is avg(collected_amt)
    max_collected_amount is max(collected_amt)
    min_collected_amount is min(collected_amt)
    avg_days is avg(dif_in_days)

}
>>>markdown
Introduction analysis: To begin, let us focus our attention on how this dataset weaves together. Excluding the header row, we have a total of 1,501 rows in the dataset. Each row is going to represent a case that was filed into the U.S. Department of Agriculture's National Organic Compliance Database. Therefore, some key columns that we will need to consider include the following: Account Name, Complaint Type, Complaint Subtype, Date/Time Opened, Date/Time Case Closed, Outcomes, and Collected Amount. These considerations will feed into our analysis that we will examine at later points.
>>>markdown
Below is a sample of some codes with interesting visualizations that will resurface later in our analysis. Please note that an explanation of these visualizations will be explained with appropriate questions as they surface during our exploration of the data.
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
    aggregate: total_cases
    group_by: `Account Name`
    limit: 5
    
}
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
    aggregate: multiple_outcomes is count() {where: `Outcomes` ~ '%;%'}
    group_by: `Complaint Type`
    limit: 7
}
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: outcome_fradulent_certificate_posted
aggregate: outcome_proposed_suspension
aggregate: outcome_civil_penalty
}
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
aggregate: outcome_fradulent_certificate_posted
aggregate: outcome_proposed_suspension
aggregate: outcome_civil_penalty
}
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
group_by: `Outcomes`
}
>>>markdown
1) To start, we should confirm the dataset is complete. Therefore, we need to confirm that the amount of cases within the dataset is 1,501.
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: total_cases
}
>>>markdown
2. Now that we have established the amount of cases in the dataset, how many of these cases are fraud investigations?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_fraud
}
>>>markdown
3. How many cases fall under the purview of labeling errors?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_labeling_error
}
>>>markdown
4. How many cases appear to have no formal category for the investigation, and therefore fall under the "other" category?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_other
}
>>>markdown
5. Of the total cases, how many involved an investigation related to pesticide residue?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_pesticide_residue
}
>>>markdown
6. Out of the total cases, how many involved concerns about prohibited agriculture practices?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_prohibited_practice
}
>>>markdown
7. How many of the total investigations were due to accusations of prohibited substances being used?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_prohibited_substance
}
>>>markdown
8. How many cases involved a complaint with reinstatement being the primary reason for the investigation?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_reinstatement
}
>>>markdown
9. How many cases began due to accusations of uncertified operations occurring?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: complaint_type_uncertified_operation
}
>>>markdown
10. Now that we have broken these complaint types out, is there one type that occurs more often?
>>>malloy

run: USDA_Organic_Program_Enforcement  -> {
    nest: complaint_nest is {
        group_by: `Complaint Type`
        aggregate:
        total_cases
        limit: 8
    }
    
}
>>>markdown
11. Were there any organizations (in the account name category) that were investigated multiple times?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: total_cases
    group_by: `Account Name`
}
>>>markdown
12. What would the prior question's inquiry look like displayed as a bar chart with a narrowed scope of 5 organizations?
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
    aggregate: total_cases
    group_by: `Account Name`
    limit: 5
    
}
>>>markdown
13. How many cases resulted in fraud being found during the investigation?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_fradulent_certificate_posted
}
>>>markdown
14. How many investigations concluded with a civil penalty as the outcome?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_civil_penalty
}
>>>markdown
15. Regarding the outcomes of the cases, how many of the organizations that were investigated appealed the final decision?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_appeal
}
>>>markdown
16. How often does the department and the agriculture organization being investigated come to some sort of settlement in court?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_settlement
}
>>>markdown
17. How many organizations were found to be compliant relating to the allegations which they were investigated for?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_compliance
}
>>>markdown
18. How many times was a complaint raised, but there was not enough evidence to warrant a full investigation?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_no_investigation
}
>>>markdown
19. How many times was the outcome of the investigation determined to be that no violation occurred?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_no_violation
}
>>>markdown
20. How often did the department label the outcome as "NONC" (No Outcome, No Comment)?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_nonc
}
>>>markdown
21. How many times was the purpose of the investigation due to a "label change?"
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_labels_changed
}
>>>markdown
22. How frequently did the investigation have an operator certification violation?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_operator_certification
}
>>>markdown
23. How often did the department deem an outcome to be so unique it fell under the "other" category?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_other
}
>>>markdown
24. How frequently does a proposed revocation affect the outcome?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_proposed_revocation
}
>>>markdown
25. How often does a proposed suspension occur as the outcome?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: outcome_proposed_suspension
}
>>>markdown
26. Now that we have broken these outcomes out individually, what are the top three that occur the most often?
>>>malloy
run: USDA_Organic_Program_Enforcement  -> {
    nest: nest_function is {
        group_by: `Outcomes`
        aggregate:
        total_cases
        limit: 3
    }
    
}
>>>markdown
27. Now that we have established that many outcomes have occurred, what was the total amount of fines civil penalty cases had to pay?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: total_collect_amt
}
>>>markdown
28. What are the lowest and highest dollar amounts that organizations had to pay in fines?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: max_collected_amount
    aggregate: min_collected_amount
    
}
>>>markdown
29. What is the average dollar amount that civil penalty cases require in the end?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: avg_collected_amt
}
>>>markdown
30. Now that we have established the types of complaints, the organizations that were investigated, and the outcomes/penalties we should dive deeper into the data. So to begin, how many outcomes resulted in multiple events occurring versus a single outcome?
>>>malloy

run: USDA_Organic_Program_Enforcement -> {
    aggregate: multiple_outcomes is count() {where: `Outcomes` ~ '%;%'}
    one_outcome is count() {where: `Outcomes` !~ '%;%'}
}
>>>markdown
31. Is there a correlation between higher fines with single outcomes?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate:
    multiple_outcomes is count() {where: `Outcomes` ~ '%;%'}
    one_outcome is count() {where: `Outcomes` !~ '%;%'}
    group_by: collected_amt
}
>>>markdown
32. Let us further evaluate why outcomes occur the way they do. Is there a correlation between complaint type and outcomes?
>>>malloy
run: USDA_Organic_Program_Enforcement  -> {
    nest: complaint_nest is {
        group_by: `Complaint Type`
        group_by: `Outcomes`
        aggregate:
        total_cases
        limit: 6
    }
}
>>>markdown
33. Is there a type of complaint that will likely produce multiple types of outcomes?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    aggregate: multiple_outcomes is count() {where: `Outcomes` ~ '%;%'}
    group_by: `Complaint Type`
    limit: 7
}
>>>markdown
34. What would the previous inquiry look like if displayed as a bar chart?
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
    aggregate: multiple_outcomes is count() {where: `Outcomes` ~ '%;%'}
    group_by: `Complaint Type`
    limit: 7
}
>>>markdown
35. Is there an outcome that usually led to higher financial penalties?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    group_by: `Outcomes`
    group_by: `Collected Amount`
    where: `Collected Amount` is not null
}
>>>markdown
36. Diving even deeper, is there a complaint subtype that is strongly correlated with financial penalties?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    group_by: `Complaint Subtype`
    group_by: `Collected Amount`
    where: `Collected Amount` is not null
    where: `Complaint Subtype` is not null
}
>>>markdown
37. Perhaps there are certain years where organizations felt pressured to perform unethically. Some of these pressures could have been due to outside factors such as COVID. What was the total number of cases closed in the years 2020-2022?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
    group_by: date_closed_year
    aggregate: total_cases
    where: date_closed_year = @2020 to @2023
}
>>>markdown
38. What was the average number of days it took to complete a case each year?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
}
>>>markdown
39. Were shorter cases more likely to result in an outcome of no violation occurring?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
aggregate: outcome_no_violation
}
>>>markdown
40. How many of the cases over the five year range were concluded to have an outcome of fraud involved, a proposed suspension, or a civil penalty?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: outcome_fradulent_certificate_posted
aggregate: outcome_proposed_suspension
aggregate: outcome_civil_penalty
}
>>>markdown
41. What would the previous inquiry look like in a bar chart?
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: outcome_fradulent_certificate_posted
aggregate: outcome_proposed_suspension
aggregate: outcome_civil_penalty
}
>>>markdown
42. If a case lasts longer is there a correlation to a more severe punishment?
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
aggregate: outcome_fradulent_certificate_posted
aggregate: outcome_proposed_suspension
aggregate: outcome_civil_penalty
}
>>>markdown
43. What would the previous inquiry look like in a bar chart form?
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
aggregate: outcome_fradulent_certificate_posted
aggregate: outcome_proposed_suspension
aggregate: outcome_civil_penalty
}
>>>markdown
44. Finally, we need to conclude if this government investigatory body is being efficient with its time and resources. If the body is being effective, we should see those violating the laws being discovered. What does an itemized display of case outcomes over the years look like? 
>>>malloy
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
group_by: `Outcomes`
}
>>>markdown
45. What would the final inquiry look like in a bar chart form?
>>>malloy
# bar_chart
# tooltip
run: USDA_Organic_Program_Enforcement -> {
group_by: `Year` is date_opened.year
aggregate: `Avg # of Days to Complete Case` is round(avg_days)
group_by: `Outcomes`
}